{
  "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/app.py": {
    "path": "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/app.py",
    "language": "python",
    "last_modified": "2025-07-04T19:45:57.292883",
    "classes": [
      "WorkflowState",
      "ExecutionStatus",
      "StateMachine"
    ],
    "functions": [
      "index",
      "context_manager_ui",
      "get_state",
      "handle_connect",
      "handle_command",
      "add_context",
      "get_context",
      "query_contexts",
      "log_decision",
      "get_suggestions",
      "get_stats",
      "get_patterns",
      "analyze_doc",
      "learn_patterns",
      "init_project",
      "find_info",
      "project_status",
      "get_visualization_graph",
      "__post_init__",
      "can_transition",
      "transition",
      "get_diagram"
    ],
    "imports": [
      "flask",
      "flask_socketio",
      "enum",
      "dataclasses",
      "typing",
      "datetime",
      "pathlib",
      "context_manager"
    ],
    "exports": [],
    "docstrings": {
      "StateMachine": "Simple state machine with allowed transitions.",
      "index": "Serve main interface.",
      "context_manager_ui": "Serve Context Manager UI.",
      "get_state": "Get current state of both machines.",
      "handle_connect": "Handle client connection.",
      "handle_command": "Process commands from client.",
      "add_context": "Add a new context.",
      "get_context": "Get a specific context.",
      "query_contexts": "Query contexts with filters.",
      "log_decision": "Log a development decision.",
      "get_suggestions": "Get task suggestions.",
      "get_stats": "Get Context Manager statistics.",
      "get_patterns": "Get detected patterns.",
      "analyze_doc": "Analyze a documentation file.",
      "learn_patterns": "Learn documentation patterns.",
      "init_project": "Initialize project by scanning all files.",
      "find_info": "Find information in the project.",
      "project_status": "Get project initialization status.",
      "get_visualization_graph": "Get knowledge graph data for visualization.",
      "can_transition": "Check if transition is allowed.",
      "transition": "Perform state transition if allowed.",
      "get_diagram": "Generate Mermaid diagram."
    },
    "comments": [],
    "lines_of_code": 465,
    "complexity_score": 0.0
  },
  "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/cm.py": {
    "path": "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/cm.py",
    "language": "python",
    "last_modified": "2025-07-04T20:23:02.136799",
    "classes": [],
    "functions": [
      "load_config",
      "save_config",
      "get_current_project",
      "set_current_project",
      "cmd_log_decision",
      "cmd_log_error",
      "cmd_suggest",
      "cmd_stats",
      "cmd_query",
      "cmd_list_projects",
      "cmd_use_project",
      "cmd_analyze_doc",
      "cmd_learn_patterns",
      "cmd_doc_quality",
      "cmd_init",
      "cmd_find",
      "cmd_status",
      "main"
    ],
    "imports": [
      "argparse",
      "sys",
      "json",
      "datetime",
      "pathlib",
      "context_manager"
    ],
    "exports": [],
    "docstrings": {
      "load_config": "Load CLI configuration.",
      "save_config": "Save CLI configuration.",
      "get_current_project": "Get current project ID.",
      "set_current_project": "Set current project ID.",
      "cmd_log_decision": "Log a development decision.",
      "cmd_log_error": "Log an error.",
      "cmd_suggest": "Get task suggestions.",
      "cmd_stats": "Show statistics.",
      "cmd_query": "Query contexts.",
      "cmd_list_projects": "List all projects.",
      "cmd_use_project": "Switch to a different project.",
      "cmd_analyze_doc": "Analyze a documentation file.",
      "cmd_learn_patterns": "Learn documentation patterns.",
      "cmd_doc_quality": "Check documentation quality.",
      "cmd_init": "Initialize project by scanning all files.",
      "cmd_find": "Find information in the project.",
      "cmd_status": "Show project initialization status.",
      "main": "Main CLI entry point."
    },
    "comments": [],
    "lines_of_code": 408,
    "complexity_score": 0.0
  },
  "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/context_manager.py": {
    "path": "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/context_manager.py",
    "language": "python",
    "last_modified": "2025-07-04T20:24:08.425138",
    "classes": [
      "ContextType",
      "Context",
      "DocMetadata",
      "CodeMetadata",
      "ProjectIndex",
      "LocationResult",
      "DocPattern",
      "ContextManager"
    ],
    "functions": [
      "to_dict",
      "from_dict",
      "needs_update",
      "__init__",
      "_init_storage",
      "_load_existing_data",
      "add_context",
      "get_context",
      "query_contexts",
      "log_decision",
      "log_error",
      "suggest_next_task",
      "_detect_patterns",
      "get_patterns",
      "_audit_operation",
      "_has_persistence",
      "get_stats",
      "analyze_doc",
      "learn_doc_patterns",
      "suggest_doc_updates",
      "calculate_doc_quality",
      "_infer_doc_type",
      "_calculate_quality_scores",
      "_check_staleness",
      "_find_related_docs",
      "_identify_affected_sections",
      "_save_doc_metadata",
      "_save_patterns",
      "initialize_project",
      "_scan_documentation",
      "_scan_code",
      "_analyze_code_file",
      "_analyze_python_file",
      "_analyze_js_file",
      "_detect_language",
      "_extract_concepts_from_text",
      "_build_concept_mappings",
      "_find_files_containing",
      "_extract_relationships",
      "_save_project_index",
      "find_information",
      "_load_project_index",
      "get_project_status"
    ],
    "imports": [
      "dataclasses",
      "datetime",
      "typing",
      "enum",
      "pathlib",
      "json",
      "uuid",
      "os",
      "re",
      "collections",
      "ast"
    ],
    "exports": [],
    "docstrings": {
      "ContextType": "Types of context entries.",
      "Context": "Core context structure for all system interactions.",
      "DocMetadata": "Lightweight metadata for existing documentation files.",
      "CodeMetadata": "Metadata for source code files.",
      "ProjectIndex": "Complete project understanding.",
      "LocationResult": "Result of finding information in the project.",
      "DocPattern": "Learned patterns from existing documentation.",
      "ContextManager": "Central context orchestration for agent-workflow system.",
      "to_dict": "Convert to dictionary for JSON serialization.",
      "from_dict": "Create Context from dictionary.",
      "needs_update": "Check if document likely needs updating.",
      "__init__": "Initialize Context Manager with storage directory.",
      "_init_storage": "Initialize directory structure.",
      "_load_existing_data": "Load existing contexts and metadata from storage.",
      "add_context": "Add new context to the system.",
      "get_context": "Retrieve context by ID.",
      "query_contexts": "Search contexts with filters.",
      "log_decision": "Track development decisions for self-improvement.",
      "log_error": "Log errors for pattern analysis.",
      "suggest_next_task": "Generate task suggestions based on patterns.",
      "_detect_patterns": "Simple pattern detection for v1.",
      "get_patterns": "Get significant patterns.",
      "_audit_operation": "Add audit log entry.",
      "_has_persistence": "Check if persistence is properly configured.",
      "get_stats": "Get current statistics.",
      "analyze_doc": "Analyze a documentation file and extract patterns.",
      "learn_doc_patterns": "Learn documentation patterns from existing files.",
      "suggest_doc_updates": "Suggest documentation updates based on context.",
      "calculate_doc_quality": "Calculate documentation quality metrics.",
      "_infer_doc_type": "Infer document type from path and name.",
      "_calculate_quality_scores": "Calculate quality scores for document content.",
      "_check_staleness": "Check for staleness indicators.",
      "_find_related_docs": "Find documentation related to a code file.",
      "_identify_affected_sections": "Identify which sections of a doc might need updating.",
      "_save_doc_metadata": "Save document metadata to disk.",
      "_save_patterns": "Save learned patterns to disk.",
      "initialize_project": "Initialize project by scanning all documentation and code.\nBuilds comprehensive metadata layer for intelligent routing.\n\nArgs:\n    project_root: Root directory of project to scan\n    \nReturns:\n    Summary of initialization results",
      "_scan_documentation": "Scan all documentation files.",
      "_scan_code": "Scan all code files.",
      "_analyze_code_file": "Analyze a single code file.",
      "_analyze_python_file": "Extract Python-specific metadata.",
      "_analyze_js_file": "Extract JavaScript/TypeScript metadata.",
      "_detect_language": "Detect programming language from file extension.",
      "_extract_concepts_from_text": "Extract concepts from text content.",
      "_build_concept_mappings": "Build concept-to-location mappings.",
      "_find_files_containing": "Find files containing any of the keywords.",
      "_extract_relationships": "Extract relationships between files.",
      "_save_project_index": "Save project index to disk.",
      "find_information": "Find where specific information lives in the project.\nUses initialized metadata for fast lookups.\n\nArgs:\n    query: Natural language query\n    \nReturns:\n    Ranked list of file locations with confidence scores",
      "_load_project_index": "Load existing project index from disk.",
      "get_project_status": "Get current project initialization status."
    },
    "comments": [],
    "lines_of_code": 1202,
    "complexity_score": 0.0
  },
  "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/static/app.js": {
    "path": "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/static/app.js",
    "language": "javascript",
    "last_modified": "2025-07-04T18:12:52.943213",
    "classes": [],
    "functions": [
      "loadInitialState",
      "updateDiagram",
      "updateStateDisplay",
      "sendCommand",
      "addToHistory"
    ],
    "imports": [],
    "exports": [],
    "docstrings": {},
    "comments": [],
    "lines_of_code": 118,
    "complexity_score": 0.0
  },
  "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/static/context_manager.js": {
    "path": "/mnt/c/Users/jmontp/Documents/workspace/agent-workflow/static/context_manager.js",
    "language": "javascript",
    "last_modified": "2025-07-04T19:47:32.580032",
    "classes": [],
    "functions": [
      "initializeChart",
      "loadStats",
      "loadRecentContexts",
      "loadSuggestions",
      "loadPatterns",
      "logDecision",
      "logError",
      "queryContexts",
      "analyzeDoc",
      "learnPatterns",
      "refreshSuggestions",
      "formatTime",
      "formatContextData",
      "showStatus",
      "checkProjectStatus",
      "initializeProject",
      "findInformation",
      "checkAndLoadVisualization",
      "loadKnowledgeGraph",
      "renderGraph",
      "dragstarted",
      "dragged",
      "dragended",
      "highlightConnections",
      "resetHighlight",
      "showNodeInfo",
      "toggleNodeType",
      "updateVisibility",
      "resetZoom"
    ],
    "imports": [],
    "exports": [],
    "docstrings": {},
    "comments": [],
    "lines_of_code": 777,
    "complexity_score": 0.0
  }
}