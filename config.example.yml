# Agent Workflow Configuration Template
# Copy this file to config.yml and customize for your needs
# This is the main configuration file for the orchestration system

# ====================================================================
# BASIC PROJECT CONFIGURATION
# ====================================================================
orchestrator:
  # Orchestration mode: blocking, partial, or autonomous
  # - blocking: Human approval required for all strategic decisions (safest)
  # - partial: Agents execute with quarantined output for review (balanced)
  # - autonomous: Full execution with monitoring and alerts (fastest)
  mode: blocking
  
  # Single project setup (simple configuration)
  project_path: "/path/to/your/project"
  project_name: "my-project"
  
  # Basic resource limits
  max_concurrent_agents: 3
  agent_timeout_minutes: 30
  
# ====================================================================
# MULTI-PROJECT CONFIGURATION (Advanced)
# ====================================================================
# Uncomment and configure for multiple projects
# projects:
#   - name: "web-app"
#     path: "/path/to/web-app"
#     mode: partial
#     priority: high
#     resources:
#       max_cpu_cores: 2
#       max_memory_gb: 2
#       max_disk_gb: 5
#   
#   - name: "api-service"
#     path: "/path/to/api-service"
#     mode: autonomous
#     priority: medium
#     resources:
#       max_cpu_cores: 1
#       max_memory_gb: 1
#       max_disk_gb: 3
#   
#   - name: "mobile-app"
#     path: "/path/to/mobile-app"
#     mode: blocking
#     priority: low
#     resources:
#       max_cpu_cores: 1
#       max_memory_gb: 1
#       max_disk_gb: 2

# ====================================================================
# DISCORD INTEGRATION
# ====================================================================
discord:
  # Bot will auto-create channels with this format: hostname-projectname
  auto_create_channels: true
  
  # Channel naming convention
  channel_prefix: ""  # Leave empty for default (hostname-projectname)
  
  # Rate limiting
  max_commands_per_minute: 20
  response_timeout_seconds: 30
  
  # Notifications
  enable_notifications: true
  notification_events:
    - sprint_start
    - task_complete
    - approval_needed
    - error_alerts

# ====================================================================
# TDD WORKFLOW CONFIGURATION
# ====================================================================
tdd:
  # Enable TDD workflow
  enabled: true
  
  # Automatically start TDD cycles for active stories
  auto_start_cycles: true
  
  # Preserve tests after TDD completion
  preserve_tests: true
  
  # Allow multiple TDD cycles simultaneously
  parallel_execution: false
  
  # TDD cycle timeouts (in minutes)
  timeouts:
    design_phase_minutes: 30
    test_red_phase_minutes: 45
    code_green_phase_minutes: 60
    refactor_phase_minutes: 30
    commit_phase_minutes: 15
  
  # Test execution settings
  test_execution:
    runner: "pytest"
    parallel_jobs: 4
    timeout_seconds: 300
    coverage_threshold: 90
  
  # Quality gates
  quality_gates:
    test_red_phase:
      min_test_count: 1
      require_failing_tests: true
    code_green_phase:
      require_all_tests_passing: true
      min_coverage_increase: 5
    refactor_phase:
      maintain_test_coverage: true
      max_complexity_regression: 0

# ====================================================================
# AGENT CONFIGURATION
# ====================================================================
agents:
  # Default agent settings
  default_timeout_minutes: 30
  max_retries: 3
  
  # Agent-specific configurations
  design_agent:
    max_specification_length: 2000
    include_diagrams: true
    detail_level: "standard"  # minimal, standard, comprehensive
  
  qa_agent:
    test_types:
      - "unit"
      - "integration"
    mock_external_services: true
    generate_test_data: true
  
  code_agent:
    implementation_style: "minimal"  # minimal, complete, extensive
    refactor_automatically: true
    apply_best_practices: true

# ====================================================================
# SECURITY SETTINGS
# ====================================================================
security:
  # Enable project isolation
  enable_project_isolation: true
  
  # Agent security profiles (defined in lib/agent_tool_config.py)
  enforce_agent_restrictions: true
  
  # File access controls
  restricted_paths:
    - "/etc"
    - "/usr/bin"
    - "/system"
  
  # Command restrictions
  blocked_commands:
    - "rm -rf"
    - "sudo"
    - "chmod 777"

# ====================================================================
# LOGGING AND MONITORING
# ====================================================================
logging:
  # Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
  level: INFO
  
  # Log file paths
  orchestrator_log: "logs/orchestrator.log"
  agent_log: "logs/agents.log"
  discord_log: "logs/discord-bot.log"
  
  # Log rotation
  max_file_size_mb: 10
  backup_count: 5
  
  # Performance monitoring
  enable_performance_tracking: true
  metrics_collection_interval_seconds: 60

# ====================================================================
# DEVELOPMENT SETTINGS
# ====================================================================
development:
  # Enable debug mode
  debug_mode: false
  
  # Mock mode (for testing without real AI APIs)
  mock_mode: false
  
  # Development server settings
  web_interface:
    enabled: true
    host: "localhost"
    port: 8080
  
  # Hot reloading
  auto_reload_config: true
  watch_file_changes: true

# ====================================================================
# USAGE INSTRUCTIONS
# ====================================================================
# 1. Copy this file: cp config.example.yml config.yml
# 2. Edit config.yml with your specific settings
# 3. Update project_path to point to your git repository
# 4. Choose your orchestration mode based on your comfort level
# 5. Configure Discord integration using your bot token in .env
# 6. Test configuration: agent-orch health --config config.yml
#
# Quick Start Examples:
#
# Single Project (Simple):
#   orchestrator:
#     mode: blocking
#     project_path: "/home/user/my-app"
#     project_name: "my-app"
#
# Multiple Projects (Advanced):
#   Uncomment the projects section above and configure each project
#
# For more examples, see: docs/getting-started/configuration.md